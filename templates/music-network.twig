{# Beyond Foundation, Music Network #}

{% extends "_layout" %}

{% set entry = craft.entries().section('musicNetwork').one() %}

{% block content %}

    <header>
      {% include 'includes/header' %}
    </header>

    <nav id="nav-overlay"> {# triggered by hamburger #}
      {% include 'includes/nav' %}
    </nav>
      
    <main>
      <h2>{{ entry.pageHeading }}</h2>

      <section class="single-col">
        <h3>{{ entry.leadTitle }}</h3>
        {{ entry.lead }}
      </section>

      {# hier irgendwo diesen link #}
      {# https://www.beyondmusic.org/contact #}
      
      <section class="single-col">
      {% if entry.video|length %}
        {% set video = entry.video %}
        <div class="video-container">
        {{  video.getEmbed() }}
        </div>
      {% elseif entry.heroImage|length %}
        <img class="full-width" src="{{ alias('@assetBasePath') }}/{{ entry.heroImage[0].getUrl('sixteen2nine') }}" alt="{{ entry.title }}, hero image">
      {% else %}
        <img class="full-width" src="{{ alias('@assetBasePath') }}/assets/_pic/placeholder_16-9.png" alt="{{ entry.title }}, hero image">
      {% endif %}
        <p class="video-caption full-width">{{ entry.shortDescription }}</p>
      </section>

      {% if entry.quote|length %}
      <blockquote>
        <p>{{ craft.app.language == 'de' ? '¬´' : '‚Äú' }}{{ entry.quote }}{{ craft.app.language == 'de' ? '¬ª' : '‚Äù' }}</p>
      </blockquote>
      {% endif %}

      {% if entry.audioTrack|length %}
        <section class="alternating-grid-text-large">
        </section> {# dirty trick: fix order of next section to fit mockup, üòÇ #}
        <section class="alternating-grid-text-large">
        <div class="image-cell">
          <img src="{{ alias('@assetBasePath') }}/{{ entry.coverImage[0].getUrl() }}" alt="{#{{ entry.trackArtist }}: #}{{ entry.trackTitle }}">
        </div>
        <div class="text-cell">
          <h3 class="player-track-title">Winning Song of the Second Creativity Award</h3>

          <div class="custom-audio-player">
            <div class="play-pause-button">{# background gets set in stylesheet #}</div>
            <p class="track-info">{#{{ entry.trackArtist }}: #}{{ entry.trackTitle }}</p>
            <p class="time normal">{# gets content by javascript #}</p>
            <audio class="audio-player" controls="controls" paused> {# audio is not displayed by way of css #}
              Your browser does not support the <code>audio</code> element.
              <source src="{{ alias('@assetBasePath') }}/{{ entry.audioTrack[0].getUrl() }}">
            </audio>
          </div>

          <div class="normal">
            {{ entry.trackInfo }}
          </div>

        </div>
      </section>
      {% endif %}

    </main>
        
    <footer>
      {% include 'includes/footer' %}
    </footer>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.1.1/howler.core.min.js"></script>
    <script>
      window.addEventListener('DOMContentLoaded', (event) => {

        console.log('I & I is at {{ slug }}' );

        // element that will show remaining time once audio loaded
        var showRemainingTime = document.querySelector('.time');

        // audio player
        var sound = new Howl({
          src: [  '{{ alias('@assetBasePath') }}/{{ entry.audioTrack[0].getUrl() }}' ]
        });
        
        // Check for audio loaded, pause and display time
        sound.once('load', function() {
          sound.pause();
          // once loaded, time can be displayed,
          // so set interval and do it every second
          window.setInterval( function() { 
            showRemainingTime.innerHTML = getRemainingTime();
            },
            1000 );
        });
        
        // button
        var playPause = document.querySelector('.play-pause-button');
        playPause.addEventListener('click' || 'touchend', handlePlayPause);


        // event handler
        function handlePlayPause(e) {
          console.log('clicked');
          e.target.classList.toggle('playing'); 
          if ( sound.playing() ) {
            sound.pause();
          } else {
            sound.play();
          }
        }

        function getRemainingTime() {
          var played = sound.seek() || 0;
          var duration = sound.duration();
          var remaining = duration - played; 

          var remainingMinutes = Math.floor(remaining/60);
          var remainingSeconds = Math.floor(remaining%60);
          return remainingMinutes + ':' + remainingSeconds;
          // remaining Sconds mit vorangestelltem Null hahahahhahahhaahha
        }
        
      });
    </script>

{% endblock %}
